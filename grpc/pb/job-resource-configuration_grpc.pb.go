// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.17.3
// source: grpc/protofile/job-resource-configuration.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// JobResourceConfigurationServiceClient is the client API for JobResourceConfigurationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobResourceConfigurationServiceClient interface {
	GetByJobId(ctx context.Context, in *GetByJobIdRequest, opts ...grpc.CallOption) (*GetByJobIdResponse, error)
}

type jobResourceConfigurationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewJobResourceConfigurationServiceClient(cc grpc.ClientConnInterface) JobResourceConfigurationServiceClient {
	return &jobResourceConfigurationServiceClient{cc}
}

func (c *jobResourceConfigurationServiceClient) GetByJobId(ctx context.Context, in *GetByJobIdRequest, opts ...grpc.CallOption) (*GetByJobIdResponse, error) {
	out := new(GetByJobIdResponse)
	err := c.cc.Invoke(ctx, "/JobResourceConfigurationService/GetByJobId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobResourceConfigurationServiceServer is the server API for JobResourceConfigurationService service.
// All implementations must embed UnimplementedJobResourceConfigurationServiceServer
// for forward compatibility
type JobResourceConfigurationServiceServer interface {
	GetByJobId(context.Context, *GetByJobIdRequest) (*GetByJobIdResponse, error)
	mustEmbedUnimplementedJobResourceConfigurationServiceServer()
}

// UnimplementedJobResourceConfigurationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedJobResourceConfigurationServiceServer struct {
}

func (UnimplementedJobResourceConfigurationServiceServer) GetByJobId(context.Context, *GetByJobIdRequest) (*GetByJobIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByJobId not implemented")
}
func (UnimplementedJobResourceConfigurationServiceServer) mustEmbedUnimplementedJobResourceConfigurationServiceServer() {
}

// UnsafeJobResourceConfigurationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobResourceConfigurationServiceServer will
// result in compilation errors.
type UnsafeJobResourceConfigurationServiceServer interface {
	mustEmbedUnimplementedJobResourceConfigurationServiceServer()
}

func RegisterJobResourceConfigurationServiceServer(s grpc.ServiceRegistrar, srv JobResourceConfigurationServiceServer) {
	s.RegisterService(&JobResourceConfigurationService_ServiceDesc, srv)
}

func _JobResourceConfigurationService_GetByJobId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByJobIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobResourceConfigurationServiceServer).GetByJobId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/JobResourceConfigurationService/GetByJobId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobResourceConfigurationServiceServer).GetByJobId(ctx, req.(*GetByJobIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// JobResourceConfigurationService_ServiceDesc is the grpc.ServiceDesc for JobResourceConfigurationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JobResourceConfigurationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "JobResourceConfigurationService",
	HandlerType: (*JobResourceConfigurationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByJobId",
			Handler:    _JobResourceConfigurationService_GetByJobId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/protofile/job-resource-configuration.proto",
}
